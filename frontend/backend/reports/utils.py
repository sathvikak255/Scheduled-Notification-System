from django.core.mail import EmailMessage
from django.template.loader import render_to_string
from io import BytesIO
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch
from datetime import date


def generate_pdf_report(email):
    buffer = BytesIO()
    p = canvas.Canvas(buffer, pagesize=letter)

    width, height = letter
    p.setFont("Helvetica-Bold", 16)
    p.drawString(inch, height - inch, f"Daily Report for {email}")

    p.setFont("Helvetica", 12)
    p.drawString(inch, height - inch - 30, "Here is your daily report generated by the system.")

    p.setFont("Helvetica-Oblique", 10)
    p.drawString(inch, inch / 2, f"Generated on {date.today().isoformat()}")


    p.showPage()
    p.save()
    buffer.seek(0)
    return buffer.read()

def generate_html_report(email):
    return render_to_string('reports/report_template.html', {'user': email})

def send_email_with_attachment(email, subject, message, attachment=None, filename=None, mimetype=None):
    email_msg = EmailMessage(subject, message, to=[email])
    if attachment and filename and mimetype:
        email_msg.attach(filename, attachment, mimetype)
    email_msg.send()
def send_reports(subscription):
    user = subscription.user
    email = user.email
    formats = subscription.formats.lower()

    subject = f"Your Daily Report - {formats.capitalize()}"
    message = ""
    email_msg = EmailMessage(subject, message, to=[email])

    if formats in ['html', 'both']:
        html_content = generate_html_report(user)
        email_msg.content_subtype = 'html'
        email_msg.body = html_content  

    if formats in ['pdf', 'both']:
        pdf_content = generate_pdf_report(user)
        email_msg.attach('report.pdf', pdf_content, 'application/pdf')

    email_msg.send()
